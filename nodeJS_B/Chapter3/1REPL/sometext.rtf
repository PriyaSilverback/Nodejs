{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red111\green180\blue6;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl700\sa380

\f0\fs38 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It's important for Node.js to provide documentation to its users, but documentation means different things to different people. Here on nodejs.org you will find three types of documentation, reference documentation, getting started documentation, and tutorials.\
\pard\pardeftab720\sl480\sa300

\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Our {\field{\*\fldinst{HYPERLINK "https://nodejs.org/api/"}}{\fldrslt 
\b \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 API reference documentation}} is meant to provide detailed version information about a given method or pattern in Node.js. From this documentation you should be able to identify what input a method has, the return value of that method, and what if any errors may be related to method. You should also be able to identify which methods are available for different versions of Node.js.\
The Getting Started materials are meant to ease you into some of the concepts found in Node. They are meant to be approachable unopinionated pieces to help you understand the patterns you will see in the Node.js APIs as well as in other modules provided from the community.\
Tutorials are for slightly more advanced topics, documentation meant to guide the user through specific use cases for Node.js. This is meant to highlight the different and varied use cases that can be found for Node.js, but are not meant to discuss the third party modules that are found in the community.\
All of this documentation is meant to only highlight the builtin core modules provided by Node, and not to highlight the module and collection of modules found in the community. Node.js doesn't want to be in the business of picking winners or losers, so to avoid the appearance of favoritism we only discuss our APIs.\
}